"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Model404ErrorToJSON = exports.Model404ErrorFromJSONTyped = exports.Model404ErrorFromJSON = exports.instanceOfModel404Error = exports.Model404ErrorCodeEnum = void 0;
/**
 * @export
 */
exports.Model404ErrorCodeEnum = {
    AdminNotFound: 'admin_not_found',
    ApiKeyNotFound: 'api_key_not_found',
    AppNotFound: 'app_not_found',
    DeviceNotFound: 'device_not_found',
    DomainNotFound: 'domain_not_found',
    EmailProviderNotFound: 'email_provider_not_found',
    EmailTemplateNotFound: 'email_template_not_found',
    EventNotFound: 'event_not_found',
    FunctionNotFound: 'function_not_found',
    FunctionSecretKeyNotFound: 'function_secret_key_not_found',
    FunctionVersionNotFound: 'function_version_not_found',
    MetadataFieldNotFound: 'metadata_field_not_found',
    OrganizationMemberNotFound: 'organization_member_not_found',
    SmsProviderNotFound: 'sms_provider_not_found',
    SmsTemplateNotFound: 'sms_template_not_found',
    UserNotFound: 'user_not_found'
};
/**
 * Check if a given object implements the Model404Error interface.
 */
function instanceOfModel404Error(value) {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "error" in value;
    return isInstance;
}
exports.instanceOfModel404Error = instanceOfModel404Error;
function Model404ErrorFromJSON(json) {
    return Model404ErrorFromJSONTyped(json, false);
}
exports.Model404ErrorFromJSON = Model404ErrorFromJSON;
function Model404ErrorFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'code': json['code'],
        'error': json['error'],
    };
}
exports.Model404ErrorFromJSONTyped = Model404ErrorFromJSONTyped;
function Model404ErrorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'error': value.error,
    };
}
exports.Model404ErrorToJSON = Model404ErrorToJSON;
