"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppInfoToJSON = exports.AppInfoFromJSONTyped = exports.AppInfoFromJSON = exports.instanceOfAppInfo = exports.AppInfoTypeEnum = void 0;
const runtime_1 = require("../runtime");
const ElementCustomization_1 = require("./ElementCustomization");
const Layouts_1 = require("./Layouts");
const Technologies_1 = require("./Technologies");
const UserMetadataField_1 = require("./UserMetadataField");
/**
 * @export
 */
exports.AppInfoTypeEnum = {
    Complete: 'complete',
    Flex: 'flex'
};
/**
 * Check if a given object implements the AppInfo interface.
 */
function instanceOfAppInfo(value) {
    let isInstance = true;
    isInstance = isInstance && "additional_auth_origins" in value;
    isInstance = isInstance && "allowed_callback_urls" in value;
    isInstance = isInstance && "allowed_identifier" in value;
    isInstance = isInstance && "allowed_logout_urls" in value;
    isInstance = isInstance && "application_login_uri" in value;
    isInstance = isInstance && "auth_fallback_method" in value;
    isInstance = isInstance && "auth_fallback_method_ttl" in value;
    isInstance = isInstance && "auth_origin" in value;
    isInstance = isInstance && "created_at" in value;
    isInstance = isInstance && "default_language" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "layouts" in value;
    isInstance = isInstance && "login_url" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "hosted" in value;
    isInstance = isInstance && "hosted_subdomain" in value;
    isInstance = isInstance && "passage_branding" in value;
    isInstance = isInstance && "profile_management" in value;
    isInstance = isInstance && "public_signup" in value;
    isInstance = isInstance && "redirect_url" in value;
    isInstance = isInstance && "refresh_absolute_lifetime" in value;
    isInstance = isInstance && "refresh_enabled" in value;
    isInstance = isInstance && "refresh_inactivity_lifetime" in value;
    isInstance = isInstance && "require_email_verification" in value;
    isInstance = isInstance && "require_identifier_verification" in value;
    isInstance = isInstance && "required_identifier" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "rsa_public_key" in value;
    isInstance = isInstance && "session_timeout_length" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "user_metadata_schema" in value;
    isInstance = isInstance && "technologies" in value;
    isInstance = isInstance && "element_customization" in value;
    return isInstance;
}
exports.instanceOfAppInfo = instanceOfAppInfo;
function AppInfoFromJSON(json) {
    return AppInfoFromJSONTyped(json, false);
}
exports.AppInfoFromJSON = AppInfoFromJSON;
function AppInfoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'additional_auth_origins': json['additional_auth_origins'],
        'allowed_callback_urls': json['allowed_callback_urls'],
        'allowed_identifier': json['allowed_identifier'],
        'allowed_logout_urls': json['allowed_logout_urls'],
        'application_login_uri': json['application_login_uri'],
        'auth_fallback_method': json['auth_fallback_method'],
        'auth_fallback_method_ttl': json['auth_fallback_method_ttl'],
        'auth_origin': json['auth_origin'],
        'created_at': (new Date(json['created_at'])),
        'default_language': json['default_language'],
        'id': json['id'],
        'layouts': (0, Layouts_1.LayoutsFromJSON)(json['layouts']),
        'login_url': json['login_url'],
        'name': json['name'],
        'hosted': json['hosted'],
        'hosted_subdomain': json['hosted_subdomain'],
        'id_token_lifetime': !(0, runtime_1.exists)(json, 'id_token_lifetime') ? undefined : json['id_token_lifetime'],
        'passage_branding': json['passage_branding'],
        'profile_management': json['profile_management'],
        'public_signup': json['public_signup'],
        'redirect_url': json['redirect_url'],
        'refresh_absolute_lifetime': json['refresh_absolute_lifetime'],
        'refresh_enabled': json['refresh_enabled'],
        'refresh_inactivity_lifetime': json['refresh_inactivity_lifetime'],
        'require_email_verification': json['require_email_verification'],
        'require_identifier_verification': json['require_identifier_verification'],
        'required_identifier': json['required_identifier'],
        'role': json['role'],
        'rsa_public_key': json['rsa_public_key'],
        'secret': !(0, runtime_1.exists)(json, 'secret') ? undefined : json['secret'],
        'session_timeout_length': json['session_timeout_length'],
        'type': json['type'],
        'user_metadata_schema': (json['user_metadata_schema'].map(UserMetadataField_1.UserMetadataFieldFromJSON)),
        'technologies': (json['technologies'].map(Technologies_1.TechnologiesFromJSON)),
        'element_customization': (0, ElementCustomization_1.ElementCustomizationFromJSON)(json['element_customization']),
    };
}
exports.AppInfoFromJSONTyped = AppInfoFromJSONTyped;
function AppInfoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'additional_auth_origins': value.additional_auth_origins,
        'allowed_callback_urls': value.allowed_callback_urls,
        'allowed_identifier': value.allowed_identifier,
        'allowed_logout_urls': value.allowed_logout_urls,
        'application_login_uri': value.application_login_uri,
        'auth_fallback_method': value.auth_fallback_method,
        'auth_fallback_method_ttl': value.auth_fallback_method_ttl,
        'auth_origin': value.auth_origin,
        'created_at': (value.created_at.toISOString()),
        'default_language': value.default_language,
        'id': value.id,
        'layouts': (0, Layouts_1.LayoutsToJSON)(value.layouts),
        'login_url': value.login_url,
        'name': value.name,
        'hosted': value.hosted,
        'hosted_subdomain': value.hosted_subdomain,
        'id_token_lifetime': value.id_token_lifetime,
        'passage_branding': value.passage_branding,
        'profile_management': value.profile_management,
        'public_signup': value.public_signup,
        'redirect_url': value.redirect_url,
        'refresh_absolute_lifetime': value.refresh_absolute_lifetime,
        'refresh_enabled': value.refresh_enabled,
        'refresh_inactivity_lifetime': value.refresh_inactivity_lifetime,
        'require_email_verification': value.require_email_verification,
        'require_identifier_verification': value.require_identifier_verification,
        'required_identifier': value.required_identifier,
        'role': value.role,
        'rsa_public_key': value.rsa_public_key,
        'secret': value.secret,
        'session_timeout_length': value.session_timeout_length,
        'type': value.type,
        'user_metadata_schema': (value.user_metadata_schema.map(UserMetadataField_1.UserMetadataFieldToJSON)),
        'technologies': (value.technologies.map(Technologies_1.TechnologiesToJSON)),
        'element_customization': (0, ElementCustomization_1.ElementCustomizationToJSON)(value.element_customization),
    };
}
exports.AppInfoToJSON = AppInfoToJSON;
