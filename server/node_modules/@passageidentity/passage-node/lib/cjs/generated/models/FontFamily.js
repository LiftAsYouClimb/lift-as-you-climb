"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Passage Management API
 * Passage\'s management API to manage your Passage apps and users.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@passage.id
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FontFamilyToJSON = exports.FontFamilyFromJSONTyped = exports.FontFamilyFromJSON = exports.FontFamily = void 0;
/**
 * Body font family
 * @export
 */
exports.FontFamily = {
    Helvetica: 'Helvetica',
    Arial: 'Arial',
    ArialBlack: 'Arial Black',
    Verdana: 'Verdana',
    Tahoma: 'Tahoma',
    TrebuchetMs: 'Trebuchet MS',
    Impact: 'Impact',
    GillSans: 'Gill Sans',
    TimesNewRoman: 'Times New Roman',
    Georgia: 'Georgia',
    Palatino: 'Palatino',
    Baskerville: 'Baskerville',
    AndalMono: 'Andal√© Mono',
    Courier: 'Courier',
    Lucida: 'Lucida',
    Monaco: 'Monaco',
    BradleyHand: 'Bradley Hand',
    BrushScriptMt: 'Brush Script MT',
    Luminari: 'Luminari',
    ComicSansMs: 'Comic Sans MS'
};
function FontFamilyFromJSON(json) {
    return FontFamilyFromJSONTyped(json, false);
}
exports.FontFamilyFromJSON = FontFamilyFromJSON;
function FontFamilyFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.FontFamilyFromJSONTyped = FontFamilyFromJSONTyped;
function FontFamilyToJSON(value) {
    return value;
}
exports.FontFamilyToJSON = FontFamilyToJSON;
